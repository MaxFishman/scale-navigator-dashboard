{"version":3,"file":"static/js/849.6835de73.chunk.js","mappings":"+KAIM,MAAOA,UAAqBC,EAAAA,GAAlCC,WAAAA,G,oBACU,KAAAC,SAAoC,KAC3B,KAAAC,aAAe,aAAcC,SAgChD,CA9BS,eAAMC,GACNC,KAAKH,cACRG,KAAKC,wBAEHD,KAAKJ,gBACDI,KAAKE,aAEbF,KAAKJ,eAAiBE,UAAUF,SAASO,QAAQ,SACnD,CAEO,gBAAMD,G,MACNF,KAAKH,cACRG,KAAKC,wBAEM,QAAbG,EAAAJ,KAAKJ,gBAAQ,IAAAQ,GAAAA,EAAEC,UACfL,KAAKJ,SAAW,IAClB,CAEO,iBAAMU,GAIX,MAHe,CACbA,YAAaN,KAAKH,aAGtB,CAEQI,qBAAAA,GACN,MAAMD,KAAKO,YACT,sDAEJ,E","sources":["../node_modules/@capacitor-community/keep-awake/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { IsSupportedResult, KeepAwakePlugin } from './definitions';\r\n\r\nexport class KeepAwakeWeb extends WebPlugin implements KeepAwakePlugin {\r\n  private wakeLock: WakeLockSentinel | null = null;\r\n  private readonly _isSupported = 'wakeLock' in navigator;\r\n\r\n  public async keepAwake(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    if (this.wakeLock) {\r\n      await this.allowSleep();\r\n    }\r\n    this.wakeLock = await navigator.wakeLock.request('screen');\r\n  }\r\n\r\n  public async allowSleep(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    this.wakeLock?.release();\r\n    this.wakeLock = null;\r\n  }\r\n\r\n  public async isSupported(): Promise<IsSupportedResult> {\r\n    const result = {\r\n      isSupported: this._isSupported,\r\n    };\r\n    return result;\r\n  }\r\n\r\n  private throwUnsupportedError(): never {\r\n    throw this.unavailable(\r\n      'Screen Wake Lock API not available in this browser.',\r\n    );\r\n  }\r\n}\r\n"],"names":["KeepAwakeWeb","WebPlugin","constructor","wakeLock","_isSupported","navigator","keepAwake","this","throwUnsupportedError","allowSleep","request","_a","release","isSupported","unavailable"],"sourceRoot":""}