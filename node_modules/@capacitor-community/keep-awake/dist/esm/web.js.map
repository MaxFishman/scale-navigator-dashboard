{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,YAAa,SAAQ,SAAS;IAA3C;;QACU,aAAQ,GAA4B,IAAI,CAAC;QAChC,iBAAY,GAAG,UAAU,IAAI,SAAS,CAAC;IAgC1D,CAAC;IA9BQ,KAAK,CAAC,SAAS;QACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,QAAQ,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAEM,KAAK,CAAC,UAAU;;QACrB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QACD,MAAA,IAAI,CAAC,QAAQ,0CAAE,OAAO,GAAG;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,MAAM,GAAG;YACb,WAAW,EAAE,IAAI,CAAC,YAAY;SAC/B,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,qBAAqB;QAC3B,MAAM,IAAI,CAAC,WAAW,CACpB,qDAAqD,CACtD,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { IsSupportedResult, KeepAwakePlugin } from './definitions';\r\n\r\nexport class KeepAwakeWeb extends WebPlugin implements KeepAwakePlugin {\r\n  private wakeLock: WakeLockSentinel | null = null;\r\n  private readonly _isSupported = 'wakeLock' in navigator;\r\n\r\n  public async keepAwake(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    if (this.wakeLock) {\r\n      await this.allowSleep();\r\n    }\r\n    this.wakeLock = await navigator.wakeLock.request('screen');\r\n  }\r\n\r\n  public async allowSleep(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    this.wakeLock?.release();\r\n    this.wakeLock = null;\r\n  }\r\n\r\n  public async isSupported(): Promise<IsSupportedResult> {\r\n    const result = {\r\n      isSupported: this._isSupported,\r\n    };\r\n    return result;\r\n  }\r\n\r\n  private throwUnsupportedError(): never {\r\n    throw this.unavailable(\r\n      'Screen Wake Lock API not available in this browser.',\r\n    );\r\n  }\r\n}\r\n"]}